<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间,作用就是对sql进行分类化管理,理解sql的隔离
    注意:使用mapper代理方法开发,namespace有特殊重要的作用-->
<mapper namespace="test">
    <!--在映射文件中要配置很多的sql语句-->
    <!--通过id查询用户表的记录-->
    <!--通过select执行数据库的查询
        id:标识 映射文件的sql,
        将sql语句封装到mappedStatement对象中,所以将id称为statement的id
        parameterType指定输入参数的类型
        #{}表示占位符
        #{id}其中的id表示接收输入的参数,参数的名称就是id
        resultType:指定sql输出结果所映射的java对象,select指定resultType表示单条记录所映射的java对象
     -->
    <select id="findUserById" parameterType="int" resultType="cn.mybatis.po.User">
        select * from user where id=#{id}
    </select>
    <!--根据用户名模糊查询用户信息，可能返回多条
        resultType:指定的就是单条记录所映射的java对象类型
        ${}:表示拼接字符串，将接收到的参数内容不加任何修饰拼接在参数中
        使用${}拼接字符串，可能会引起sql注入
        ${value}:接收输入参数的内容，如果传入类型是简单类型，${}中只能使用value
    -->
    <select id="findUserByName" parameterType="java.lang.String" resultType="cn.mybatis.po.User">
        select * from user where username like '%${value}%'
    </select>

    <!--添加用户
        parameterType:指定输入参数的类型是pojo(包括用户信息)
        #{}中指定Pojo的属性名，接收到Pojo的对象属性值，mybatis通过OGNL获取对象的属性值
    -->
    <insert id="insertUser" parameterType="cn.mybatis.po.User">
        <!--
         将插入数据的主键返回，返回到User对象中
         select last_insert_id():得到刚insert进去记录的主键值，只适用于自增主键
         keyProperty：将查询到的主键值设置到parameterType指定对象的id属性
         order:select last_insert_id()的执行顺序
         resultType:指定last_insert_id()结果的类型
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select last_insert_id()
        </selectKey>
        insert into user(username,birthday,sex,address) value(#{username},#{birthday},#{sex},
        #{address})
    </insert>

    <!--删除用户
        根据id删除用户，需要输入Id值
    -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{id}
    </delete>

    <!--更新用户-->
    <update id="updateUser" parameterType="cn.mybatis.po.User">
        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address}
        where id=#{id}
    </update>
</mapper>